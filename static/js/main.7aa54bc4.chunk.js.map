{"version":3,"sources":["utils.ts","components/Pagination/Pagination.tsx","App.tsx","index.tsx"],"names":["getNumbers","from","to","numbers","n","push","Pagination","sum","sumOfPosPerPage","total","perPage","currentPage","arrOfItems","onPageChange","amountOfPages","Math","ceil","className","classNames","disabled","href","onClick","map","page","active","length","item","App","useState","state","setState","currentItems","currPage","finalPosition","arrOfItemsForCurrPage","startPos","endPos","name","value","id","onChange","event","target","htmlFor","dataset","currentTarget","Number","ReactDOM","render","document","getElementById"],"mappings":"gMAAO,SAASA,EAAWC,EAAcC,GAGvC,IAFA,IAAMC,EAAU,GAEPC,EAAIH,EAAMG,GAAKF,EAAIE,GAAK,EAC/BD,EAAQE,KAAKD,GAGf,OAAOD,E,2BCIIG,EAA8B,SAAC,GAMrC,IAEHC,EACAC,EARFC,EAKI,EALJA,MACAC,EAII,EAJJA,QACAC,EAGI,EAHJA,YACAC,EAEI,EAFJA,WACAC,EACI,EADJA,aAaMC,GAVJP,EAU+BE,EAT/BD,EASsCE,EALxBV,EAAW,EAFNe,KAAKC,KAAKT,EAAMC,KASrC,OACE,qCACE,qBAAIS,UAAU,aAAd,UACE,oBAAIA,UAAWC,IACb,YACA,CAAEC,SAA0B,IAAhBR,IAFd,SAKE,mBACE,UAAQ,WACRM,UAAU,YACVG,KAAK,QACL,gBAA+B,IAAhBT,EACf,YAAU,cACV,cAAaA,EAAc,EAC3BU,QAASR,EAPX,oBAaDC,EAAcQ,KAAI,SAAAC,GAAI,OACrB,oBACEN,UAAWC,IACT,YACA,CAAEM,QAASb,IAAgBY,IAH/B,SAOE,mBACE,UAAQ,WACRN,UAAU,YACVG,KAAI,WAAMG,GACV,YAAU,cACV,aAAYA,EACZF,QAASR,EANX,SAQGU,KAVEA,MAcT,oBAAIN,UAAWC,IACb,YACA,CAAEC,SAAUR,IAAgBG,EAAcW,SAF5C,SAKE,mBACE,UAAQ,WACRR,UAAU,YACVG,KAAK,QACL,gBAAeT,IAAgBG,EAAcW,OAC7C,YAAU,cACV,cAAad,EAAc,EAC3BU,QAASR,EAPX,uBAaJ,6BACGD,EAAWU,KAAI,SAAAI,GAAI,OAClB,oBAAe,UAAQ,OAAvB,wBAAuCA,IAA9BA,YCvFNC,EAAgB,WAC3B,MAA0BC,mBAAS,CACjClB,QAAS,EACTC,YAAa,IAFf,mBAAOkB,EAAP,KAAcC,EAAd,KA4CQpB,EAAyBmB,EAAzBnB,QAASC,EAAgBkB,EAAhBlB,YAEXoB,EAzCwB,SAC5BxB,EACAC,EACAwB,GAEA,IAIIC,EAAgBzB,EAAkBwB,EAQtC,OANIC,EAAgB1B,IAClB0B,EAAgB1B,GAGGP,EAVc,IAAbgC,EAClB,EACAxB,EAAkBwB,EAAWxB,EAAkB,EAQJyB,GA0B5BC,CAAsB,GAAIxB,EAASC,GAElDwB,EAAWJ,EAAa,GAExBK,EAASL,EAAcA,EAAaN,OAAS,GAEnD,OACE,sBAAKR,UAAU,YAAf,UACE,uDAEA,mBAAGA,UAAU,OAAO,UAAQ,OAA5B,wBACWN,EADX,mBACiCwB,EADjC,cAC+CC,EAD/C,aAIA,sBAAKnB,UAAU,iBAAf,UACE,qBAAKA,UAAU,0BAAf,SACE,yBACEoB,KAAK,UACLC,MAAK,UAAK5B,GACV,UAAQ,kBACR6B,GAAG,kBACHtB,UAAU,eACVuB,SA1CR,SAACC,GACD,IAAQH,EAAUG,EAAMC,OAAhBJ,MAERR,EAAS,CACPpB,SAAU4B,EACV3B,YAAa,KA+BT,UAQE,wBAAQ2B,MAAM,IAAd,eACA,wBAAQA,MAAM,IAAd,eACA,wBAAQA,MAAM,KAAd,gBACA,wBAAQA,MAAM,KAAd,qBAIJ,uBAAOK,QAAQ,kBAAkB1B,UAAU,qBAA3C,+BAKF,cAAC,EAAD,CACER,MAAO,GACPC,QAASA,EACTC,YAAaA,EACbC,WAAYmB,EACZlB,aApDa,SAAC4B,GAClB,IAAQG,EAAYH,EAAMI,cAAlBD,QAERd,EAAS,2BACJD,GADG,IAENlB,YAAamC,OAAOF,EAAQN,iBC3ClCS,IAASC,OAAO,cAAC,EAAD,IAASC,SAASC,eAAe,W","file":"static/js/main.7aa54bc4.chunk.js","sourcesContent":["export function getNumbers(from: number, to: number): number[] {\n  const numbers = [];\n\n  for (let n = from; n <= to; n += 1) {\n    numbers.push(n);\n  }\n\n  return numbers;\n}\n","import classNames from 'classnames';\nimport { getNumbers } from '../../utils';\n\ntype Props = {\n  total: number\n  perPage: number\n  currentPage: number\n  arrOfItems: number[]\n  onPageChange: (event: React.MouseEvent<HTMLAnchorElement>) => void\n};\n\nexport const Pagination: React.FC<Props> = ({\n  total,\n  perPage,\n  currentPage,\n  arrOfItems,\n  onPageChange,\n}) => {\n  const arrOfPages = (\n    sum: number,\n    sumOfPosPerPage: number,\n  ) => {\n    const sumOfPages = Math.ceil(sum / sumOfPosPerPage);\n\n    const pages = getNumbers(1, sumOfPages);\n\n    return pages;\n  };\n\n  const amountOfPages = arrOfPages(total, perPage);\n\n  return (\n    <>\n      <ul className=\"pagination\">\n        <li className={classNames(\n          'page-item',\n          { disabled: currentPage === 1 },\n        )}\n        >\n          <a\n            data-cy=\"prevLink\"\n            className=\"page-link\"\n            href=\"#prev\"\n            aria-disabled={currentPage === 1}\n            data-name=\"currentPage\"\n            data-value={+currentPage - 1}\n            onClick={onPageChange}\n          >\n            «\n          </a>\n        </li>\n\n        {amountOfPages.map(page => (\n          <li\n            className={classNames(\n              'page-item',\n              { active: +currentPage === page },\n            )}\n            key={page}\n          >\n            <a\n              data-cy=\"pageLink\"\n              className=\"page-link\"\n              href={`#${page}`}\n              data-name=\"currentPage\"\n              data-value={page}\n              onClick={onPageChange}\n            >\n              {page}\n            </a>\n          </li>\n        ))}\n        <li className={classNames(\n          'page-item',\n          { disabled: currentPage === amountOfPages.length },\n        )}\n        >\n          <a\n            data-cy=\"nextLink\"\n            className=\"page-link\"\n            href=\"#next\"\n            aria-disabled={currentPage === amountOfPages.length}\n            data-name=\"currentPage\"\n            data-value={+currentPage + 1}\n            onClick={onPageChange}\n          >\n            »\n          </a>\n        </li>\n      </ul>\n      <ul>\n        {arrOfItems.map(item => (\n          <li key={item} data-cy=\"item\">{`Item ${item}`}</li>\n        ))}\n      </ul>\n    </>\n  );\n};\n","import React, { useState } from 'react';\nimport './App.css';\nimport { getNumbers } from './utils';\nimport { Pagination } from './components/Pagination';\n\nexport const App: React.FC = () => {\n  const [state, setState] = useState({\n    perPage: 5,\n    currentPage: 1,\n  });\n\n  const arrOfItemsForCurrPage = (\n    sum: number,\n    sumOfPosPerPage: number,\n    currPage: number,\n  ) => {\n    const startPosition = currPage === 1\n      ? 1\n      : sumOfPosPerPage * currPage - sumOfPosPerPage + 1;\n\n    let finalPosition = sumOfPosPerPage * currPage;\n\n    if (finalPosition > sum) {\n      finalPosition = sum;\n    }\n\n    const arrayOfItems = getNumbers(startPosition, finalPosition);\n\n    return arrayOfItems;\n  };\n\n  const handleAmountOfItems\n  = (event: React.ChangeEvent<HTMLSelectElement>): void => {\n    const { value } = event.target;\n\n    setState({\n      perPage: +value,\n      currentPage: 1,\n    });\n  };\n\n  const handlePage = (event: React.MouseEvent<HTMLAnchorElement>): void => {\n    const { dataset } = event.currentTarget;\n\n    setState({\n      ...state,\n      currentPage: Number(dataset.value),\n    });\n  };\n\n  const { perPage, currentPage } = state;\n\n  const currentItems = arrOfItemsForCurrPage(42, perPage, currentPage);\n\n  const startPos = currentItems[0];\n\n  const endPos = currentItems[(currentItems.length - 1)];\n\n  return (\n    <div className=\"container\">\n      <h1>Items with Pagination</h1>\n\n      <p className=\"lead\" data-cy=\"info\">\n        {`Page ${currentPage} (items ${startPos} - ${endPos} of 42)`}\n      </p>\n\n      <div className=\"form-group row\">\n        <div className=\"col-3 col-sm-2 col-xl-1\">\n          <select\n            name=\"perPage\"\n            value={`${perPage}`}\n            data-cy=\"perPageSelector\"\n            id=\"perPageSelector\"\n            className=\"form-control\"\n            onChange={handleAmountOfItems}\n          >\n            <option value=\"3\">3</option>\n            <option value=\"5\">5</option>\n            <option value=\"10\">10</option>\n            <option value=\"20\">20</option>\n          </select>\n        </div>\n\n        <label htmlFor=\"perPageSelector\" className=\"col-form-label col\">\n          items per page\n        </label>\n      </div>\n\n      <Pagination\n        total={42}\n        perPage={perPage}\n        currentPage={currentPage}\n        arrOfItems={currentItems}\n        onPageChange={handlePage}\n      />\n    </div>\n  );\n};\n\nexport default App;\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}