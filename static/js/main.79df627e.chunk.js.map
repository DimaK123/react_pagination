{"version":3,"sources":["utils.ts","components/Pagination/Pagination.tsx","App.tsx","index.tsx"],"names":["getNumbers","from","to","numbers","n","push","Pagination","React","memo","sum","sumOfPosPerPage","total","perPage","currentPage","onPageChange","pages","Math","ceil","arrOfItems","currPage","getArrOfItemsForCurrPage","className","classNames","disabled","href","onClick","map","page","active","length","item","App","useState","setPerPage","setCurrentPage","startPos","endPos","name","value","id","onChange","event","target","htmlFor","dataset","currentTarget","Number","ReactDOM","render","document","getElementById"],"mappings":"oNAAO,SAASA,EAAWC,EAAcC,GAGvC,IAFA,IAAMC,EAAU,GAEPC,EAAIH,EAAMG,GAAKF,EAAIE,GAAK,EAC/BD,EAAQE,KAAKD,GAGf,OAAOD,EAGF,I,OCCMG,EAA8BC,IAAMC,MAC/C,YAKO,IDYPC,EACAC,ECjBEC,EAII,EAJJA,MACAC,EAGI,EAHJA,QACAC,EAEI,EAFJA,YACAC,EACI,EADJA,aAEMC,GDWRN,ECXyBE,EDYzBD,ECZgCE,EDgBlBZ,EAAW,EAFNgB,KAAKC,KAAKR,EAAMC,KCZ3BQ,EDV8B,SACtCT,EACAC,EACAS,GAYA,OAFqBnB,EARc,IAAbmB,EAClB,EACAT,EAAkBS,EAAWT,EAAkB,EAE7BA,EAAkBS,EAAWV,EAC/CA,EACAC,EAAkBS,GCDDC,CAAyB,GAAIR,EAASC,GAEzD,OACE,qCACE,qBAAIQ,UAAU,aAAd,UACE,oBAAIA,UAAWC,IACb,YACA,CAAEC,SAA0B,IAAhBV,IAFd,SAKE,mBACE,UAAQ,WACRQ,UAAU,YACVG,KAAK,QACL,gBAA+B,IAAhBX,EACf,YAAU,cACV,cAAaA,EAAc,EAC3BY,QAASX,EAPX,oBAaDC,EAAMW,KAAI,SAAAC,GAAI,OACb,oBACEN,UAAWC,IACT,YACA,CAAEM,QAASf,IAAgBc,IAH/B,SAOE,mBACE,UAAQ,WACRN,UAAU,YACVG,KAAI,WAAMG,GACV,YAAU,cACV,aAAYA,EACZF,QAASX,EANX,SAQGa,KAVEA,MAcT,oBAAIN,UAAWC,IACb,YACA,CAAEC,SAAUV,IAAgBE,EAAMc,SAFpC,SAKE,mBACE,UAAQ,WACRR,UAAU,YACVG,KAAK,QACL,gBAAeX,IAAgBE,EAAMc,OACrC,YAAU,cACV,cAAahB,EAAc,EAC3BY,QAASX,EAPX,uBAaJ,6BACGI,EAAWQ,KAAI,SAAAI,GAAI,OAClB,oBAAe,UAAQ,OAAvB,wBAAuCA,IAA9BA,cC/ERC,EAAgB,WAC3B,MAA8BC,mBAAS,GAAvC,mBAAOpB,EAAP,KAAgBqB,EAAhB,KACA,EAAsCD,mBAAS,GAA/C,mBAAOnB,EAAP,KAAoBqB,EAApB,KAiBMC,EAAWvB,EAAUC,EAAcD,EAAU,EAE7CwB,EAASxB,EAAUC,EAAc,GACnC,GACAD,EAAUC,EAEd,OACE,sBAAKQ,UAAU,YAAf,UACE,uDAEA,mBAAGA,UAAU,OAAO,UAAQ,OAA5B,wBACWR,EADX,mBACiCsB,EADjC,cAC+CC,EAD/C,aAIA,sBAAKf,UAAU,iBAAf,UACE,qBAAKA,UAAU,0BAAf,SACE,yBACEgB,KAAK,UACLC,MAAK,UAAK1B,GACV,UAAQ,kBACR2B,GAAG,kBACHlB,UAAU,eACVmB,SArCkB,SAC1BC,GAEA,IAAQH,EAAUG,EAAMC,OAAhBJ,MAERJ,EAAe,GACfD,GAAYK,IAyBN,UAQE,wBAAQA,MAAM,IAAd,eACA,wBAAQA,MAAM,IAAd,eACA,wBAAQA,MAAM,KAAd,gBACA,wBAAQA,MAAM,KAAd,qBAIJ,uBAAOK,QAAQ,kBAAkBtB,UAAU,qBAA3C,+BAKF,cAACf,EAAD,CACEK,MAAO,GACPC,QAASA,EACTC,YAAaA,EACbC,aA9Ca,SAAC2B,GAClB,IAAQG,EAAYH,EAAMI,cAAlBD,QAERV,EAAeY,OAAOF,EAAQN,eCjBlCS,IAASC,OAAO,cAAC,EAAD,IAASC,SAASC,eAAe,W","file":"static/js/main.79df627e.chunk.js","sourcesContent":["export function getNumbers(from: number, to: number): number[] {\n  const numbers = [];\n\n  for (let n = from; n <= to; n += 1) {\n    numbers.push(n);\n  }\n\n  return numbers;\n}\n\nexport const getArrOfItemsForCurrPage = (\n  sum: number,\n  sumOfPosPerPage: number,\n  currPage: number,\n) => {\n  const startPosition = currPage === 1\n    ? 1\n    : sumOfPosPerPage * currPage - sumOfPosPerPage + 1;\n\n  const finalPosition = sumOfPosPerPage * currPage > sum\n    ? sum\n    : sumOfPosPerPage * currPage;\n\n  const arrayOfItems = getNumbers(startPosition, finalPosition);\n\n  return arrayOfItems;\n};\n\nexport const getPages = (\n  sum: number,\n  sumOfPosPerPage: number,\n) => {\n  const sumOfPages = Math.ceil(sum / sumOfPosPerPage);\n\n  const pages = getNumbers(1, sumOfPages);\n\n  return pages;\n};\n","import React from 'react';\nimport classNames from 'classnames';\nimport { getPages, getArrOfItemsForCurrPage } from '../../utils';\n\ntype Props = {\n  total: number\n  perPage: number\n  currentPage: number\n  onPageChange: (event: React.MouseEvent<HTMLAnchorElement>) => void\n};\n\nexport const Pagination: React.FC<Props> = React.memo(\n  ({\n    total,\n    perPage,\n    currentPage,\n    onPageChange,\n  }) => {\n    const pages = getPages(total, perPage);\n\n    const arrOfItems = getArrOfItemsForCurrPage(42, perPage, currentPage);\n\n    return (\n      <>\n        <ul className=\"pagination\">\n          <li className={classNames(\n            'page-item',\n            { disabled: currentPage === 1 },\n          )}\n          >\n            <a\n              data-cy=\"prevLink\"\n              className=\"page-link\"\n              href=\"#prev\"\n              aria-disabled={currentPage === 1}\n              data-name=\"currentPage\"\n              data-value={+currentPage - 1}\n              onClick={onPageChange}\n            >\n              «\n            </a>\n          </li>\n\n          {pages.map(page => (\n            <li\n              className={classNames(\n                'page-item',\n                { active: +currentPage === page },\n              )}\n              key={page}\n            >\n              <a\n                data-cy=\"pageLink\"\n                className=\"page-link\"\n                href={`#${page}`}\n                data-name=\"currentPage\"\n                data-value={page}\n                onClick={onPageChange}\n              >\n                {page}\n              </a>\n            </li>\n          ))}\n          <li className={classNames(\n            'page-item',\n            { disabled: currentPage === pages.length },\n          )}\n          >\n            <a\n              data-cy=\"nextLink\"\n              className=\"page-link\"\n              href=\"#next\"\n              aria-disabled={currentPage === pages.length}\n              data-name=\"currentPage\"\n              data-value={+currentPage + 1}\n              onClick={onPageChange}\n            >\n              »\n            </a>\n          </li>\n        </ul>\n        <ul>\n          {arrOfItems.map(item => (\n            <li key={item} data-cy=\"item\">{`Item ${item}`}</li>\n          ))}\n        </ul>\n      </>\n    );\n  },\n);\n","import React, { useState } from 'react';\nimport './App.css';\nimport { Pagination } from './components/Pagination';\n\nexport const App: React.FC = () => {\n  const [perPage, setPerPage] = useState(5);\n  const [currentPage, setCurrentPage] = useState(1);\n\n  const handleAmountOfItems = (\n    event: React.ChangeEvent<HTMLSelectElement>,\n  ): void => {\n    const { value } = event.target;\n\n    setCurrentPage(1);\n    setPerPage(+value);\n  };\n\n  const handlePage = (event: React.MouseEvent<HTMLAnchorElement>): void => {\n    const { dataset } = event.currentTarget;\n\n    setCurrentPage(Number(dataset.value));\n  };\n\n  const startPos = perPage * currentPage - perPage + 1;\n\n  const endPos = perPage * currentPage > 42\n    ? 42\n    : perPage * currentPage;\n\n  return (\n    <div className=\"container\">\n      <h1>Items with Pagination</h1>\n\n      <p className=\"lead\" data-cy=\"info\">\n        {`Page ${currentPage} (items ${startPos} - ${endPos} of 42)`}\n      </p>\n\n      <div className=\"form-group row\">\n        <div className=\"col-3 col-sm-2 col-xl-1\">\n          <select\n            name=\"perPage\"\n            value={`${perPage}`}\n            data-cy=\"perPageSelector\"\n            id=\"perPageSelector\"\n            className=\"form-control\"\n            onChange={handleAmountOfItems}\n          >\n            <option value=\"3\">3</option>\n            <option value=\"5\">5</option>\n            <option value=\"10\">10</option>\n            <option value=\"20\">20</option>\n          </select>\n        </div>\n\n        <label htmlFor=\"perPageSelector\" className=\"col-form-label col\">\n          items per page\n        </label>\n      </div>\n\n      <Pagination\n        total={42}\n        perPage={perPage}\n        currentPage={currentPage}\n        onPageChange={handlePage}\n      />\n    </div>\n  );\n};\n\nexport default App;\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}